<!-- 
  Turtlebot navigation simulation:
  - stage
  - map_server
  - move_base
  - static map
  - amcl
  - rviz view
 -->
<launch>
  <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, rhoomba -->
  <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

  <!-- Name of the map to use (without path nor extension) and initial position -->
  <!--arg name="map_file"       default=" $(env TURTLEBOT_STAGE_MAP_FILE)"/--> <!-- robopark_plan -->
  <arg name="map_file"       default="$(find turtlebot_stage)/maps/maze.yaml"/> <!-- robopark_plan -->
  <!--arg name="world_file"     default=" $(env TURTLEBOT_STAGE_WORLD_FILE)"/-->
  <arg name="world_file"     default="$(find turtlebot_stage)/maps/stage/maze.world"/>
  <arg name="initial_pose_x" default="30.0"/>
  <arg name="initial_pose_y" default="30.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <param name="/use_sim_time" value="true"/>
  <!--  ******************** Stage ********************  -->
  <!-- 
        Publishes transforms:
          /base_link -> /base_laser
          /base_footprint -> /base_link (identity)
          /odom -> base_footprint
        Publishes topics:
          /odom : odometry data from the simulated odometry
          /base_scan : laser data from the simulated laser
          /base_pose_ground_truth : the ground truth pose
        Parameters:
          base_watchdog_timeout : time (s) after receiving the last command on cmd_vel before stopping the robot
        Args:
          -g : run in headless mode.
  --> 
  <node pkg="stage_ros" type="stageros" name="stageros" args="$(arg world_file)">
    <param name="base_watchdog_timeout" value="0.5"/>
    <remap from="odom" to="odom"/>
    <remap from="base_pose_ground_truth" to="base_pose_ground_truth"/>
    <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
    <remap from="base_scan" to="scan"/>
  </node>

  <node name="sim_s" pkg="micros_flocking" type="sim_manager" output="screen">
    <param name='robotnum' value='20'/>
  </node>

  <!--  ***************** Robot Model *****************  -->
  <group ns="robot_0">
  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="true"/>
  </node>
  </group>  

  <!-- Command Velocity multiplexer -->
  <group ns="robot_0">
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>
  </group>

  <arg name="odom_frame_id"   default="odom"/>
<arg name="base_frame_id"   default="base_footprint"/>
<arg name="global_frame_id" default="/map"/>
<arg name="odom_topic" default="odom" />
<arg name="laser_topic" default="scan" />
<arg name="custom_param_file" default="$(find turtlebot_navigation)/param/dummy.yaml"/>

<!--  ************** Navigation  ***************  -->
<group ns="robot_0"><param name="tf_prefix" value="robot_0" />
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>
    <arg name="robot_name" value="robot_0" />
  <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
    <param name="odom_frame_id" value="/robot_0/odom"/>
    <param name="base_frame_id" value="/robot_0/base_link"/>
    <param name="global_frame_id" value="/map"/>
  </node>
  <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot_navigation)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/global_planner_params.yaml" command="load" />
    <rosparam file="$(find turtlebot_navigation)/param/navfn_global_planner_params.yaml" command="load" />
    <!-- external params file that could be loaded into the move_base namespace -->
    <rosparam file="$(arg custom_param_file)" command="load" />

    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>
  </node>
</group>

  <!--  ****** Maps *****  -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="/map"/>
  </node>
  
  

  <!--  **************** Visualisation ****************  -->
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_stage)/rviz/robot_navigation.rviz"/-->
  <!--node name="rviz" pkg="rviz" type="rviz"/-->

  <!--  ***************** Robot Model *****************  -->
  <group ns="robot_1"><param name="tf_prefix" value="robot_1" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      
    </node>
  </group>

  <group ns="robot_1">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_1/odom"/>
      <param name="base_frame_id" value="/robot_1/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>


    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_2"><param name="tf_prefix" value="robot_2" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_2">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_2/odom"/>
      <param name="base_frame_id" value="/robot_2/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_3"><param name="tf_prefix" value="robot_3" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    
    </node>
  </group>

  <group ns="robot_3">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_3/odom"/>
      <param name="base_frame_id" value="/robot_3/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_4"><param name="tf_prefix" value="robot_4" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    
    </node>
  </group>

  <group ns="robot_4">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_4/odom"/>
      <param name="base_frame_id" value="/robot_4/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_5"><param name="tf_prefix" value="robot_5" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    
    </node>
  </group>

  <group ns="robot_5">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_5/odom"/>
      <param name="base_frame_id" value="/robot_5/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_6"><param name="tf_prefix" value="robot_6" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_6">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_6/odom"/>
      <param name="base_frame_id" value="/robot_6/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_7"><param name="tf_prefix" value="robot_7" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_7">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_7/odom"/>
      <param name="base_frame_id" value="/robot_7/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_8"><param name="tf_prefix" value="robot_8" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    
    </node>
  </group>

  <group ns="robot_8">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_8/odom"/>
      <param name="base_frame_id" value="/robot_8/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
  <group ns="robot_9"><param name="tf_prefix" value="robot_9" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_9">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_9/odom"/>
      <param name="base_frame_id" value="/robot_9/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    <!--  ***************** Robot Model *****************  -->
    
  <group ns="robot_10"><param name="tf_prefix" value="robot_10" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_10">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_10/odom"/>
      <param name="base_frame_id" value="/robot_10/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
   
  <group ns="robot_11"><param name="tf_prefix" value="robot_11" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_11">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_11/odom"/>
      <param name="base_frame_id" value="/robot_11/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    
  <group ns="robot_12"><param name="tf_prefix" value="robot_12" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_12">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_12/odom"/>
      <param name="base_frame_id" value="/robot_12/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    
  <group ns="robot_13"><param name="tf_prefix" value="robot_13" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_13">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_13/odom"/>
      <param name="base_frame_id" value="/robot_13/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
 
  <group ns="robot_14"><param name="tf_prefix" value="robot_14" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_14">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_14/odom"/>
      <param name="base_frame_id" value="/robot_14/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
   
  <group ns="robot_15"><param name="tf_prefix" value="robot_15" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_15">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_15/odom"/>
      <param name="base_frame_id" value="/robot_15/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
   
  <group ns="robot_16"><param name="tf_prefix" value="robot_16" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    
    </node>
  </group>

  <group ns="robot_16">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_16/odom"/>
      <param name="base_frame_id" value="/robot_16/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
   
  <group ns="robot_17"><param name="tf_prefix" value="robot_17" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_17">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_17/odom"/>
      <param name="base_frame_id" value="/robot_17/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
    
  <group ns="robot_18"><param name="tf_prefix" value="robot_18" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     
    </node>
  </group>

  <group ns="robot_18">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_18/odom"/>
      <param name="base_frame_id" value="/robot_18/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
   
  <group ns="robot_19"><param name="tf_prefix" value="robot_19" />
    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
   
    </node>
  </group>

  <group ns="robot_19">
    <node pkg="action_softbus" type="action_softbus_node" name="action_softbus_node1" output="screen">
    </node>
    <node pkg="fake_localization" type="fake_localization" name="fake_localization_node0" output="screen">
      <param name="odom_frame_id" value="/robot_19/odom"/>
      <param name="base_frame_id" value="/robot_19/base_link"/>
      <param name="global_frame_id" value="/map"/>
    </node>
  </group>
  
</launch>
